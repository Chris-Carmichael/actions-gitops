name: dir-looping

on:
  push:
    branches:
      - test2
  pull_request:
    branches:
      - main

jobs:
  collect-directories:
    runs-on: ubuntu-latest

    steps:

      # https://github.com/actions/checkout
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: get directories
        run: ./scripts/get-directories.sh

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v13.1

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      #- name: Find kustomized directories
      #  id: kustomized-dirs
      #  run: |
      #    /bin/bash -c KUST_DIRS=$(for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
      #      DIR=$(dirname $file)
      #      if test -f $DIR/kustomization.yaml; then
      #        echo $DIR
      #      fi
      #    done | sort -u)
      #    echo "$KUST_DIRS"
      #    #echo "::set-output name=KUST_DIRS::$KUST_DIRS"

      - name: find kust dirs
        id: kust-dirs
        run: |
          KUST_DIRS=$(for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            DIR=$(dirname $file)
            if test -f $DIR/kustomization.yaml; then
              echo $DIR
            fi
          done)
          echo "$KUST_DIRS"
          echo "KUST_DIRS<<EOF" >> $GITHUB_ENV
          echo "$KUST_DIRS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: List all kustomized directories
        run: |
          echo "test string: ${{ env.KUST_DIRS }}"
          dirs=($($KUST_DIRS))
          for dir in $dirs; do
            echo "$dir is kustomized"
          done
